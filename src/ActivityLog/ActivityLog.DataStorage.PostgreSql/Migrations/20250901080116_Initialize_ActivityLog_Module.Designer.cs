// <auto-generated />
using System;
using ActivityLog.DataStorage.PostgreSql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ActivityLog.DataStorage.PostgreSql.Migrations
{
    [DbContext(typeof(PostgreSqlMigrationDbContext))]
    [Migration("20250901080116_Initialize_ActivityLog_Module")]
    partial class Initialize_ActivityLog_Module
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ActivityLog.Entities.ActivityLogRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("ActivityDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("ActivityName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("ClassName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<Guid?>("CorrelationId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Exception")
                        .HasColumnType("text");

                    b.Property<string>("ExceptionType")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<double?>("ExecutionDurationMs")
                        .HasColumnType("double precision");

                    b.Property<string>("InputParameters")
                        .HasColumnType("text");

                    b.Property<string>("IpAddress")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("boolean");

                    b.Property<string>("LogLevel")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)");

                    b.Property<string>("Metadata")
                        .HasMaxLength(2048)
                        .HasColumnType("character varying(2048)");

                    b.Property<string>("MethodName")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("Namespace")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("ReturnValue")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Tags")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)");

                    b.Property<string>("TargetEntity")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("TargetEntityId")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("UserAgent")
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("ClassName")
                        .HasDatabaseName("IX_ActivityLog_ClassName");

                    b.HasIndex("CorrelationId")
                        .HasDatabaseName("IX_ActivityLog_CorrelationId");

                    b.HasIndex("IsSuccess")
                        .HasDatabaseName("IX_ActivityLog_IsSuccess");

                    b.HasIndex("LogLevel")
                        .HasDatabaseName("IX_ActivityLog_LogLevel");

                    b.HasIndex("MethodName")
                        .HasDatabaseName("IX_ActivityLog_MethodName");

                    b.HasIndex("Namespace")
                        .HasDatabaseName("IX_ActivityLog_Namespace");

                    b.HasIndex("StartTime")
                        .HasDatabaseName("IX_ActivityLog_StartTime");

                    b.HasIndex("UserId")
                        .HasDatabaseName("IX_ActivityLog_UserId");

                    b.HasIndex("StartTime", "IsSuccess")
                        .HasDatabaseName("IX_ActivityLog_StartTime_IsSuccess");

                    b.HasIndex("Namespace", "ClassName", "StartTime")
                        .HasDatabaseName("IX_ActivityLog_Namespace_ClassName_StartTime");

                    b.ToTable("ActivityLogRecord", "ActivityLog");
                });
#pragma warning restore 612, 618
        }
    }
}
