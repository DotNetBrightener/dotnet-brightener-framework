// <auto-generated />
using System;
using DotNetBrightener.Infrastructure.AppClientManager.DataStorage.Mssql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetBrightener.Infrastructure.AppClientManager.DataStorage.Mssql.Migrations
{
    [DbContext(typeof(AppClientDbMigrationContext))]
    [Migration("20240422014645_InitializeAppClientDb_v002")]
    partial class InitializeAppClientDb_v002
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DotNetBrightener.DataAccess.EF.Entities.EnumLookupEntity<DotNetBrightener.Infrastructure.AppClientManager.Models.AppClientStatus>", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("AppClientStatusValue");

                    b.HasKey("Id");

                    b.ToTable("AppClientStatusLookup", "AppClient");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Value = "Inactive"
                        },
                        new
                        {
                            Id = 30,
                            Value = "Active"
                        },
                        new
                        {
                            Id = 50,
                            Value = "Suspended"
                        });
                });

            modelBuilder.Entity("DotNetBrightener.DataAccess.EF.Entities.EnumLookupEntity<DotNetBrightener.Infrastructure.AppClientManager.Models.AppClientType>", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)")
                        .HasColumnName("AppClientTypeValue");

                    b.HasKey("Id");

                    b.ToTable("AppClientTypeLookup", "AppClient");

                    b.HasData(
                        new
                        {
                            Id = 0,
                            Value = "NoRestriction"
                        },
                        new
                        {
                            Id = 5,
                            Value = "Web"
                        },
                        new
                        {
                            Id = 10,
                            Value = "Mobile"
                        },
                        new
                        {
                            Id = 20,
                            Value = "Desktop"
                        });
                });

            modelBuilder.Entity("DotNetBrightener.Infrastructure.AppClientManager.Models.AppClient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AllowedAppBundleIds")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("AllowedOrigins")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ClientName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ClientSecretHashed")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientSecretSalt")
                        .HasMaxLength(5000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientStatus")
                        .HasColumnType("int");

                    b.Property<int>("ClientType")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset?>("CreatedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeactivatedReason")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("DeletedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset?>("DeletedDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("DeletionReason")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTimeOffset?>("ModifiedDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("Id");

                    b.HasIndex("AllowedOrigins");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("AppClient", "AppClient");
                });

            modelBuilder.Entity("DotNetBrightener.Infrastructure.AppClientManager.Models.AppClientAccessScope", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("AppClientId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Scope")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("AppClientId");

                    b.ToTable("AppClientAccessScope", "AppClient");
                });

            modelBuilder.Entity("DotNetBrightener.Infrastructure.AppClientManager.Models.AppClientAccessScope", b =>
                {
                    b.HasOne("DotNetBrightener.Infrastructure.AppClientManager.Models.AppClient", "AppClient")
                        .WithMany()
                        .HasForeignKey("AppClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppClient");
                });
#pragma warning restore 612, 618
        }
    }
}
