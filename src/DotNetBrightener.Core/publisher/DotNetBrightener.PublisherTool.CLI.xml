<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DotNetBrightener.PublisherTool.CLI</name>
    </assembly>
    <members>
        <member name="T:DotNetBrightener.PublisherTool.CLI.ModuleDefinition">
            <summary>
                Represents the description of a module
            </summary>
        </member>
        <member name="P:DotNetBrightener.PublisherTool.CLI.ModuleDefinition.ModuleId">
            <summary>
                Identifier of the module, should be unique.
            <para>
                Can be something in format 'com.[company-name].[module-name]'
            </para>
            <para>
                This will be used in the dependencies of other modules if specified
            </para>
            </summary>
        </member>
        <member name="P:DotNetBrightener.PublisherTool.CLI.ModuleDefinition.Name">
            <summary>
                Friendly name of the module
            </summary>
        </member>
        <member name="P:DotNetBrightener.PublisherTool.CLI.ModuleDefinition.Dependencies">
            <summary>
                List of other modules' identifiers which this module depends on
            </summary>
        </member>
        <member name="P:DotNetBrightener.PublisherTool.CLI.ModuleDefinition.ModuleType">
            <summary>
            Type of module
            </summary>
        </member>
        <member name="M:DotNetBrightener.PublisherTool.CLI.ModuleSorterExtension.SortByDependencies``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}},System.Boolean)">
            <summary>
                Orders the input <typeparamref name="T"/> based on its element's dependencies
            </summary>
            <typeparam name="T">Type of the <see cref="T:System.Collections.Generic.IEnumerable`1"/></typeparam>
            <param name="source">The source collection</param>
            <param name="dependencies">The expression returns the dependencies collection</param>
            <param name="throwOnCircularDepsCaught">Indicates whether should throw exception when circular dependencies are found</param>
            <returns>A new <see cref="T:System.Collections.Generic.IEnumerable`1"/> of the sorted source by its elements' dependencies</returns>
        </member>
    </members>
</doc>
