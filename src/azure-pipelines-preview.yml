variables:
- group: dotnet-brightener
- name: BuildParameters.RestoreBuildProjects
  value: 'src/DotNetBrightenerFramework.sln'

- name: BuildConfiguration
  value: Release

- name: ExtractedBuildNo
  value: $[replace(replace(replace(variables['System.PullRequest.targetBranchName'], 'releases/', ''), 'preview/', ''), 'refs/heads/', '')]


name: $(ExtractedBuildNo)-rc-$(Year:YY)$(DayOfYear)$(Date:HH)$(Rev:rr)

trigger: none

pool:
  vmImage: 'ubuntu-latest'

    # pool:
    #   name: dotnetbrightener-selfhosted
    #   demands: 
    #   - agent.name -equals self-hosted

stages:
- stage: Test
  jobs:
  - job: Test
    displayName: Test Packages

    steps:
    - checkout: self
      displayName: Checking out $(Build.BuildNumber)
      submodules: true
      persistCredentials: true

    - task: UseDotNet@2
      displayName: Ensure .NET Core SDK Installed
      inputs:
        version: 9.x
        performMultiLevelLookup: true

    - task: DotNetCoreCLI@2
      displayName: Restore Packages
      inputs:
        command: restore
        projects: $(BuildParameters.RestoreBuildProjects)

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: $(BuildParameters.RestoreBuildProjects)
        arguments: -p:GeneratePackageOnBuild=false --configuration $(BuildConfiguration)

- stage: Build
  dependsOn: Test
  jobs:
  - job: Build_Packages
    displayName: Building packages

    steps:
    - checkout: self
      displayName: Checking out $(Build.BuildNumber)
      submodules: true
      persistCredentials: true

    - task: UseDotNet@2
      displayName: Ensure .NET Core SDK Installed
      inputs:
        version: 9.x
        performMultiLevelLookup: true

    - task: DotNetCoreCLI@2
      displayName: Restore Packages
      inputs:
        command: restore
        projects: $(BuildParameters.RestoreBuildProjects)

    - task: DotNetCoreCLI@2
      displayName: Building version $(Build.BuildNumber)
      inputs:
        projects: $(BuildParameters.RestoreBuildProjects)
        arguments: --configuration $(BuildConfiguration) -p:Version=$(Build.BuildNumber)
    
    - task: PublishBuildArtifacts@1
      displayName: "Archiving Artifact"
      inputs:
        PathtoPublish: 'src/nupkg_release'
        ArtifactName: 'dnb-framework'
        publishLocation: 'Container'
        
- stage: MirrorToGithub
  dependsOn: Build
  jobs:
  - job: MirrorToGithub
    displayName: Mirror to Github

    steps:
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          git clone --bare "https://justinchasez04121990:$(AzureAccessToken)@dev.azure.com/justinchasez/DotNet%20Brightener/_git/dotnet-brightener-framework"
          cd dotnet-brightener-framework.git
          git push --mirror https://$(GithubAccessToken)@github.com/DotNetBrightener/dotnet-brightener-framework
          cd ..
          rm -Rf dotnet-brightener-framework.git
      displayName: 'Mirror to Github'